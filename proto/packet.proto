syntax = "proto3";

package ProtoNet;

import "world.proto";

enum PacketType {
  Invalid = 0;
  Error = 1;
  BeginHandshake = 2;
  AcceptHandshake = 3;
  CompleteHandshake = 4;
  Being = 5;
}

enum ErrorType {
  Generic = 0;
  InvalidVersion = 1;
  InvalidUsername = 2;
  InvalidPassword = 3;
}

message Packet {
  PacketType type = 1;
  bytes data = 2;

  // Ticket is used for "callback" like requests
  uint32 ticket = 3;
}

message ISession {
  string server = 1;
  bytes session = 2;
}

message PacketError {
  ErrorType type = 1;
  string msg = 2;
}

/*
  This packet sends a small amount of information to the server requesting a new game
  session be established.
*/
message PacketBeginHandshake {
  // Username is provided for servers that do not require session authentication
  string username = 1;

  // Current protocol version we are attempting to handshake with
  uint32 version = 2;

  // Client session
  ISession session = 3;
}

/*
  This packet responds to BeginHandshake sending the servers session information, and a new
  ID for this session.
*/
message PacketAcceptHandshake {
  // A unique ID for this session
  uint64 id = 1;

  // Server session
  ISession session = 2;

  // Is this server password protected??
  bool password = 3;
}


/*
  Final step in the three-way handshake, client expresses intent to fully join the server.
*/
message PacketCompleteHandshake {
  string password = 1;

  // TODO: mod information goes here
}

/*
  Sends intial information required for the client to be part of the server...
*/
message PacketBegin {
  // Send information about the current world
  world.World world = 1;

  // Send the current location
  world.Point pos = 2;
}
